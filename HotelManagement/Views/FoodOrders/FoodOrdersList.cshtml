@model List<HotelManagement.ViewModels.FoodOrderViewModel>
@using HotelManagement.Enums
<!-- Food Orders List View -->
<!-- This view displays a list of food orders made by guests. -->
<!-- Staff can update the status of orders and delete them. -->
@{
    ViewData["Title"] = "Food Orders";
}

<div class="container mt-4">
    <h2>Food Orders</h2>
    <table class="table table-bordered table-striped mt-3">
        <thead class="table-dark">
            <tr>
                <th>Guest</th>
                <th>Room</th>
                <th>Description</th>
                <th>Order Date</th>
                <th>Foods</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model)
            {
                <tr>
                    <td>@order.GuestName</td>
                    <td>@order.RoomNumber</td>
                    <td>@order.Description</td>
                    <td>@order.OrderDate.ToString("g")</td>
                    <td>
                        <ul class="list-unstyled mb-0">
                            @foreach (var food in order.Foods)
                            {
                                <li>@food</li>
                            }
                        </ul>
                    </td>
                    <!-- Status Management (Radio Buttons Auto Submit) -->
                    <td>
                        <form asp-action="UpdateStatus" asp-controller="FoodOrders" method="post">
                            <input type="hidden" name="id" value="@order.Id" />
                            <div class="d-flex flex-column gap-1">
                                @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                                {
                                    var statusStr = status.ToString();
                                    var isChecked = status == order.Status;
                                    var inputId = $"status_{order.Id}_{statusStr}";
                                    var labelClass = isChecked 
                                        ? "btn btn-sm btn-primary rounded-pill w-100" 
                                        : "btn btn-sm btn text-secondary rounded-pill w-100";

                                    <input type="radio" class="btn-check" name="status" value="@statusStr" id="@inputId"
                                        onchange="this.form.submit()" autocomplete="off" checked="@(isChecked)" />
                                    <label class="@labelClass" for="@inputId">@statusStr</label>
                                }
                            </div>
                        </form>
                    </td>

                    <!-- Action Buttons -->
                    <!-- TBD what kind of Actions we want to implement -->
                    <td>
                        <form asp-action="DeleteOrder" asp-controller="not-yet" method="post" onsubmit="return confirm('Are you sure you want to delete this order?');">
                            <input type="hidden" name="id" value="@order.Id" />
                            <button type="submit" class="btn btn-danger btn-sm">Delete(not implemented)</button>
                        </form>
                </tr>
            }
        </tbody>
    </table>
</div>

