@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model BookingCartViewModel
@using HotelManagement.Models
@using HotelManagement.ViewModels;

<!-- Booking Cart View -->
<!-- This view displays the booking cart with the selected rooms, their types, and prices.
     It allows the user to remove rooms from the cart and finalize the booking. -->

@{
    ViewData["Title"] = Localizer["BookingCart"];
}

@if (Model.RoomDetails == null || !Model.RoomDetails.Any())
{
    <h2>@Localizer["EmptyCart"]</h2>
    <a class="btn btn-primary" asp-controller="Bookings" asp-action="StartBooking">@Localizer["CreateBooking"]</a>
    return;
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label=@Localizer["Close"]></button>
    </div>
}

<h2>@Localizer["BookingSummary"]</h2>
<p>@Localizer["CheckIn"]: <strong>@Model.StartDate.ToShortDateString()</strong></p>
<p>@Localizer["CheckOut"]: <strong>@Model.EndDate.ToShortDateString()</strong></p>
<p>@Localizer["TotalNights"]: <strong>@Model.Nights</strong></p>

<table class="table">
    <thead>
        <tr>
            <th>@Localizer["Room"]</th>
            <th>@Localizer["Type"]</th>
            <th>@Localizer["Capacity"]</th>
            <th>@Localizer["PriceNight"]</th>
            <th>@Localizer["Subtotal"]</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.RoomDetails)
        {
            <tr>
                <td>@item.RoomNumber</td>
                <td>@item.RoomTypeDescription</td>
                <td>@item.Capacity</td>
                <td>@item.PricePerNight.ToString("C")</td>
                <td>@item.Subtotal.ToString("C")</td>
                <td>
                    <form class="remove-room-form" asp-controller="Bookings" asp-action="RemoveFromBookingCart" method="post">
                        <input type="hidden" name="roomId" value="@item.RoomId" />
                        <button type="submit" class="btn btn-danger">@Localizer["Remove"]</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<h4>Total: @Model.TotalPrice.ToString("C")</h4>

<form asp-controller="Bookings" asp-action="FinalizeBooking" method="post">
    <button type="submit" class="btn btn-success">@Localizer["FinalizeBooking"]</button>
</form>

@section Scripts {
    <script>
        document.querySelectorAll(".remove-room-form").forEach(form => {
            form.addEventListener("submit", async function (e) {
                e.preventDefault();

                const formData = new FormData(form);
                const actionUrl = form.getAttribute("action");

                const data = {};
                formData.forEach((value, key) => {
                    data[key] = value;
                });

                const response = await fetch(actionUrl, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    const result = await response.json();
                    if (result.success) {
                        location.reload();
                    } else {
                        alert("Action failed.");
                    }
                } else {
                    const error = await response.text();
                    alert("Request failed: " + error);
                }
            });
        });
    </script>
}


