@model HotelManagement.ViewModels.EventListViewModel
@using Microsoft.AspNetCore.Identity
@using HotelManagement.Models
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

<!-- Event List View -->
<!-- This view displays a list of events and allows admins/staff to create/delete new events. -->
<!-- Users can attend events. -->
@{
    ViewData["Title"] = Localizer["EventsListTitle"];
    var isAdmin = Model.IsManager;
    var isStaff = User.IsInRole("Staff");
    var currentUserId = Model.CurrentUserId;
}

<h3>@Localizer["EventsListTitle"]</h3>

<div class="container">
    <div class="row row-cols-1 row-cols-md-3 g-4">

        @* --- Create Event Card (Admin Only) --- *@
        @if (isAdmin)
        {
            <div class="col">
                <div class="card h-100 shadow-sm border-success">
                    <div class="card-body">
                        <form asp-action="CreateEvent" method="post">
                            <h5 class="card-title text-success">@Localizer["EventsListCreateNew"]</h5>

                            <div class="mb-2">
                                <input type="text" name="Name" class="form-control" placeholder=@Localizer["EventsListName"] required />
                            </div>
                            <div class="mb-2">
                                <textarea name="Description" class="form-control" placeholder=@Localizer["EventsListDescription"] required></textarea>
                            </div>
                            <div class="mb-2">
                                <input type="date" name="DatePart" class="form-control" required />
                            </div>
                            <div class="mb-2">
                                <input type="time" name="TimePart" class="form-control" required />
                            </div>
                            <div class="mb-3">
                                <input type="number" name="Capacity" class="form-control" placeholder=@Localizer["EventsListCapacity"] min="1" required />
                            </div>

                            <button type="submit" class="btn btn-success w-100">@Localizer["EventsListCreate"]</button>
                        </form>
                    </div>
                </div>
            </div>
        }

        @* --- Existing Events --- *@
        @foreach (var eventItem in Model.Events)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">@eventItem.Event.Name</h5>
                        <p class="card-text">@eventItem.Event.Description</p>
                        <hr />
                        <p><strong>@Localizer["EventsListDate"]:</strong> @eventItem.Event.Date.ToString("dd/MM/yyyy")</p>
                        <p><strong>@Localizer["EventsListTime"]:</strong> @eventItem.Event.Date.ToString("HH:mm")</p>
                        <p><strong>@Localizer["EventsListFreeSpots"]:</strong> @(@eventItem.Event.Capacity - eventItem.TotalRegisteredParticipants) / @eventItem.Event.Capacity</p>
                        @if ((isAdmin || isStaff) && eventItem.Event.StaffMembers != null && eventItem.Event.StaffMembers.Any())
                        {
                            <p><strong>@Localizer["EventsListAssignedStaff"]:</strong></p>
                            <ul>
                                @foreach (var staff in eventItem.Event.StaffMembers)
                                {
                                    <li>@staff.UserName</li>
                                }
                            </ul>
                        }
                    </div>
                    <div class="card-footer bg-transparent border-top-0 d-flex justify-content-between">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            
                            @if (eventItem.IsUserRegistered)
                            {
                                <form asp-action="UnregisterFromEvent" method="post" class="d-inline">
                                    <input type="hidden" name="eventId" value="@eventItem.Event.Id" />
                                    <button type="submit" class="btn btn-warning">@Localizer["EventsListCancelAttendance"]</button>
                                </form>
                            }
                            else if (eventItem.TotalRegisteredParticipants < eventItem.Event.Capacity)
                            {
                                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#registerModal-@eventItem.Event.Id">@Localizer["EventsListAttend"]</button>
                            }
                            else
                            {
                                <button class="btn btn-secondary" disabled>@Localizer["EventsListFull"]</button>
                            }
                        }
                        else
                        {
                            <span class="text-muted">@Localizer["EventsListLogin"]</span>
                        }
                        @if (isAdmin)
                        {
                            <button class="btn btn-outline-secondary ms-2" data-bs-toggle="modal" data-bs-target="#assignStaffModal-@eventItem.Event.Id">@Localizer["EventsListAssign"]</button>
                        }
                        @if (isAdmin)
                        {
                            <form asp-action="DeleteEvent" asp-route-id="@eventItem.Event.Id" method="post" onsubmit="return confirm(@Localizer["EventsListDeleteConfirm"]);">
                                <button type="submit" class="btn btn-outline-danger">@Localizer["EventsListDelete"]</button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        }
        @foreach (var eventItem in Model.Events)
        {
            @await Html.PartialAsync("_EventRegisterModal", eventItem)
            @if (isAdmin)
            {
                @await Html.PartialAsync("_AssignStaffModal", eventItem)
            }
        }
    </div>
</div>

        