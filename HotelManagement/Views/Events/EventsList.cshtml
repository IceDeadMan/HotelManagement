@model HotelManagement.ViewModels.EventListViewModel
@using Microsoft.AspNetCore.Identity
@using HotelManagement.Models
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

<!-- Event List View -->
<!-- This view displays a list of events and allows admins/staff to create/delete new events. -->
<!-- Users can attend events. -->
@{
    ViewData["Title"] = Localizer["EventsListTitle"];
    var isAdmin = Model.IsManager;
    var isStaff = User.IsInRole("Staff");
    var currentUserId = Model.CurrentUserId;
}

<h3>@Localizer["EventsListTitle"]</h3>

<div class="container">
    <div class="row row-cols-1 row-cols-md-3 g-4">

        @* --- Create Event Card (Admin Only) --- *@
        @if (isAdmin)
        {
            <div class="col">
                <div class="card h-100 shadow-sm border-success">
                    <div class="card-body">
                        <form asp-action="CreateEvent" method="post">
                            <h5 class="card-title text-success">@Localizer["EventsListCreateNew"]</h5>

                            <div class="mb-2">
                                <input type="text" name="Name" class="form-control" placeholder=@Localizer["EventsListName"] required />
                            </div>
                            <div class="mb-2">
                                <textarea name="Description" class="form-control" placeholder=@Localizer["EventsListDescription"] required></textarea>
                            </div>
                            <div class="mb-2">
                                <input type="date" name="DatePart" class="form-control" required />
                            </div>
                            <div class="mb-2">
                                <input type="time" name="TimePart" class="form-control" required />
                            </div>
                            <div class="mb-3">
                                <input type="number" name="Capacity" class="form-control" placeholder=@Localizer["EventsListCapacity"] min="1" required />
                            </div>

                            <button type="submit" class="btn btn-success w-100">@Localizer["EventsListCreate"]</button>
                        </form>
                    </div>
                </div>
            </div>
        }

        @* --- Existing Events --- *@
        @foreach (var eventItem in Model.Events)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">@eventItem.Event.Name</h5>
                        <p class="card-text">@eventItem.Event.Description</p>
                        <hr />
                        <p><strong>@Localizer["EventsListDate"]:</strong> @eventItem.Event.Date.ToString("dd.MM.yyyy")</p>
                        <p><strong>@Localizer["EventsListTime"]:</strong> @eventItem.Event.Date.ToString("HH:mm")</p>
                        <p><strong>@Localizer["EventsListFreeSpots"]:</strong> @(@eventItem.Event.Capacity - eventItem.TotalRegisteredParticipants) / @eventItem.Event.Capacity</p>
                        @if ((isAdmin || isStaff) && eventItem.Event.StaffMembers != null && eventItem.Event.StaffMembers.Any())
                        {
                            <p><strong>@Localizer["EventsListAssignedStaff"]:</strong></p>
                            <ul>
                                @foreach (var staff in eventItem.Event.StaffMembers)
                                {
                                    <li>@(staff.FirstName + " " + staff.LastName)</li>
                                }
                            </ul>
                        }
                        @if (!SignInManager.IsSignedIn(User)) {
                            <span>@Localizer["ToRegister"] <a href="/Users/Login">@Localizer["Login"]</a> @Localizer["Or"] <a href="/Users/Register">@Localizer["Register"]</a>.</span>
                        }
                    </div>
                    <div class="card-footer bg-transparent border-top-0">
                        <div class="row g-2">
                            @* Row 1 *@
                            <div class="col-6">
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    if (eventItem.IsUserRegistered)
                                    {
                                        <form asp-action="UnregisterFromEvent" method="post">
                                            <input type="hidden" name="eventId" value="@eventItem.Event.Id" />
                                            <button class="btn btn-warning w-100" >@Localizer["EventsListCancelAttendance"]</button>
                                        </form>
                                    }
                                    else if (eventItem.TotalRegisteredParticipants < eventItem.Event.Capacity)
                                    {
                                        <button class="btn btn-primary w-100"  data-bs-toggle="modal" data-bs-target="#registerModal-@eventItem.Event.Id">
                                            @Localizer["EventsListAttend"]
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-secondary w-100"  disabled>
                                            @Localizer["EventsListFull"]
                                        </button>
                                    }
                                }
                            </div>

                            @if (isAdmin)
                            {
                                <div class="col-6">
                                    <button class="btn btn-outline-secondary w-100"  data-bs-toggle="modal" data-bs-target="#assignStaffModal-@eventItem.Event.Id">
                                        @Localizer["EventsListAssign"]
                                    </button>
                                </div>
                                <div class="col-6">
                                    @{
                                        var safeEventData = new {
                                            Id = eventItem.Event.Id,
                                            Name = eventItem.Event.Name,
                                            Description = eventItem.Event.Description,
                                            Date = eventItem.Event.Date,
                                            Capacity = eventItem.Event.Capacity
                                        };
                                    }
                                    <button class="btn btn-outline-warning w-100"  data-bs-toggle="modal" data-bs-target="#editEventModal"
                                            onclick='populateEditEventModal(@Html.Raw(Json.Serialize(safeEventData)))'>
                                        @Localizer["Edit"]
                                    </button>
                                </div>
                                <div class="col-6">
                                    <form asp-action="DeleteEvent" asp-route-id="@eventItem.Event.Id" method="post" onsubmit="return confirm(@Localizer["EventsListDeleteConfirm"]);">
                                        <button class="btn btn-outline-danger w-100"  type="submit">
                                            @Localizer["EventsListDelete"]
                                        </button>
                                    </form>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
        @foreach (var eventItem in Model.Events)
        {
            @await Html.PartialAsync("_EventRegisterModal", eventItem)
            @if (isAdmin)
            {
                @await Html.PartialAsync("_AssignStaffModal", eventItem)
            }
        }
    </div>
</div>

@* --- Edit Event Modal --- *@
<div class="modal fade" id="editEventModal" tabindex="-1" aria-labelledby="editEventModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editEventForm" asp-action="EditEvent" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="editEventModalLabel">@Localizer["EditEventTitle"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="Id" id="editEventId" />
                    <div class="mb-2">
                        <label class="form-label">@Localizer["EventsListName"]</label>
                        <input type="text" name="Name" id="editEventName" class="form-control" required />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">@Localizer["EventsListDescription"]</label>
                        <textarea name="Description" id="editEventDescription" class="form-control" rows="2" required></textarea>
                    </div>
                    <div class="mb-2">
                        <label class="form-label">@Localizer["EventsListDate"]</label>
                        <input type="date" name="DatePart" id="editEventDate" class="form-control" required />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">@Localizer["EventsListTime"]</label>
                        <input type="time" name="TimePart" id="editEventTime" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">@Localizer["EventsListCapacity"]</label>
                        <input type="number" name="Capacity" id="editEventCapacity" class="form-control" min="1" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Close"]</button>
                    <button type="submit" class="btn btn-primary">@Localizer["Edit"]</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function populateEditEventModal(eventData) {
        document.getElementById("editEventId").value = eventData.id;
        document.getElementById("editEventName").value = eventData.name;
        document.getElementById("editEventDescription").value = eventData.description;

        const date = new Date(eventData.date);
        document.getElementById("editEventDate").value = date.toISOString().split('T')[0];
        document.getElementById("editEventTime").value = date.toTimeString().substring(0, 5);

        document.getElementById("editEventCapacity").value = eventData.capacity;
    }
</script>

        